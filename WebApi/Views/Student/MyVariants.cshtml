@model System.Collections.Generic.List<WebApi.Infrastructure.Models.DTO.VariantDto>

@{
    ViewBag.Title = "Мои варианты";
    Layout = "_StudentLayout";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Список вариантов</h2>
    </div>

    <input type="text" id="searchBox" class="form-control mb-4" placeholder="Поиск по ID варианта">

    @if (Model != null && Model.Any())
    {
        <div id="variantList" class="list-group">
            @foreach (var variant in Model)
            {
                <div class="list-group-item" data-id="@variant.Id">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">@variant.Title</h5>
                            <small>Преподаватель: @variant.TeacherLastName @variant.TeacherFirstName</small>
                            <div class="mt-2">
                                <span class="badge bg-secondary">ID: @variant.Id</span>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <a class="btn btn-outline-primary"
                               href="@Url.Action("GetVariantToSolve", "Student", new { variantId = variant.Id })">
                                Начать
                            </a>
                            <a class="btn btn-outline-success"
                               href="@Url.Action("GetExamToSolve", "Student", new { variantId = variant.Id })">
                                Экзамен
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">Нет доступных вариантов.</div>
    }
</div>

@section Scripts {
    <script>
        const searchBox = document.getElementById('searchBox');
        const items = document.querySelectorAll('#variantList .list-group-item');

        searchBox.addEventListener('input', function () {
            const query = this.value.trim();
            items.forEach(item => {
                const id = item.dataset.id.toString();
                item.style.display = id.includes(query) ? '' : 'none';
            });
        });
    </script>
}
